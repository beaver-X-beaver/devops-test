---
name: Main CI - Rust
on:
  push:
    branches: main
env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    shell: bash

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code 
        uses: actions/checkout@v2
      - name: Add clippy component to rustup
        run: rustup component add clippy
        if: success()
      - name: Execute linting process
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
        if: success()
  build:
    needs: lint
    strategy:
      matrix:
        include:
          - name: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            env: {}
          - name: x86-64-pc-windows-msvc
            os: windows-latest
            env: {}
          - name: x86_64-apple-darwin
            os: macos-latest
            env: {}
    runs-on: "${{ matrix.os }}"
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Dump toolchain target
        run: rustup target list | grep installed
        if: success()
      - name: Build
        run: cargo build --release --workspace
        env: ${{ matrix.env }}
        if: success()
      - name: Test
        run: cargo test
        if: success()
      - name: Publish artifacts
        uses: actions/upload-artifact@v2
        with:
          name: devops-test-task-${{ github.run_number }}-${{ matrix.name }}
          path: target/release
          retention-days: 5
        if: success()
      - name: Publish Crates to crates.io
        run: cargo publish --dry-run --token $TOKEN
        env:
          TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        if: success()
